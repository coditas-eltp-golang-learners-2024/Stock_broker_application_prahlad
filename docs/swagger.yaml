basePath: /
definitions:
  handlers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  handlers.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  models.SignInCredentials:
    properties:
      userName:
        type: string
      userPassword:
        minLength: 8
        type: string
    required:
    - userName
    - userPassword
    type: object
  models.UserInfo:
    properties:
      userEmail:
        example: testUser@gmail.com
        type: string
      userName:
        example: TestUser
        type: string
      userPanCardNumber:
        example: abgjhi6789
        type: string
      userPassword:
        example: sample11110
        minLength: 8
        type: string
      userPhoneNumber:
        example: "7878543610"
        type: string
    required:
    - userEmail
    - userName
    - userPanCardNumber
    - userPassword
    - userPhoneNumber
    type: object
  service.SignInRepository:
    type: object
  service.UserRepository:
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a Stock Broker Application API
  title: Stock Broker Application
  version: "1.0"
paths:
  /signin:
    post:
      consumes:
      - application/json
      description: Performs validations on user sign-in credentials and verifies them.
      parameters:
      - description: User sign-in credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.SignInCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully signed in
          schema:
            type: string
        "400":
          description: Failed to sign in
          schema:
            type: string
      summary: Perform sign-in validations
  /signup:
    post:
      consumes:
      - application/json
      description: Handles HTTP POST request to create new users
      parameters:
      - description: User information in JSON format
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: User information inserted successfully
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create a new user
  /signup/new:
    post:
      consumes:
      - application/json
      description: Creates a new instance of UserService with the provided UserRepository.
      parameters:
      - description: Pointer to repo.UserRepository
        in: body
        name: UserRepository
        required: true
        schema:
          $ref: '#/definitions/service.UserRepository'
      produces:
      - application/json
      responses:
        "200":
          description: Instance of UserService created successfully
          schema:
            type: string
      summary: Create a new instance of UserService.
  /verify:
    post:
      consumes:
      - application/json
      description: Verifies user's sign-in credentials.
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      - description: Password
        in: path
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: "true"
          schema:
            type: string
        "400":
          description: "false"
          schema:
            type: string
      summary: Verify user sign-in credentials
swagger: "2.0"
